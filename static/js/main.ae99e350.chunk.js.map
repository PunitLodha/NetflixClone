{"version":3,"sources":["api/TmdbAPI.js","components/MoviesContext.js","components/ThemeContext.js","components/NavBar.js","components/ItemGrid.js","components/Home.js","components/Movies.js","components/Tv.js","components/DiscoverResults.js","components/Discover.js","components/MovieDetails.js","components/TvDetails.js","components/ScrollToTop.js","components/Container.js","App.js","serviceWorker.js","index.js","NetflixLogo.svg"],"names":["baseUrl","apiUrl","process","caching","url","a","async","caches","open","then","cache","match","response","json","res","axios","get","data","result","add","cacheData","MoviesContext","createContext","MoviesContextProvider","children","useState","movies","setmovies","tvShows","settvShows","useEffect","getTopRatedMovies","prevState","topRated","results","getPopularMovies","popular","getUpcomingMovies","upcoming","getNowPlayingMovies","nowPlaying","getTopRatedTvShows","getPopularTvShows","getOnTheAirTvShows","onTheAir","getAiringTodayTvShows","airingToday","Provider","value","ThemeContext","ThemeContextProvider","isLight","dark","background","text","secondary","card","light","theme","setTheme","handleChange","useStyles","makeStyles","appBar","backgroundColor","nav","display","flexDirection","alignItems","height","width","padding","listStyle","linkStyle","color","textDecoration","margin","img","label","menuItem","NavBar","useContext","mobile","useMediaQuery","menu","logoMargin","classes","anchorEl","setAnchorEl","handleClose","AppBar","position","className","Toolbar","to","style","marginRight","src","logo","alt","exact","Typography","variant","FormControlLabel","control","Switch","checked","onChange","IconButton","onClick","event","currentTarget","Menu","id","keepMounted","Boolean","onClose","MenuItem","container","paddingTop","paddingLeft","root","overflowX","overflowY","transition","opacity","transform","list","poster","borderRadius","ItemGrid","items","type","name","title","posterSize","posterRadius","rootSize","map","item","key","poster_path","Home","align","Movies","Tv","conatiner","maxWidth","marginTop","overview","DiscoverResults","link","length","slice","paper","boxShadow","formContainer","justifyContent","flexWrap","form","minWidth","menuProps","PaperProps","maxHeight","itemHeight","Discover","year","genre","sortBy","rating","filters","setFilters","setResults","handleClick","target","getDiscoverResults","Paper","FormControl","InputLabel","Select","MenuProps","input","Input","imgContainer","content","top","bottom","right","left","backgroundImage","details","zIndex","marginBottom","fontSize","info","fontFamily","subtitle","subcontent","marginLeft","trailer","recommendations","MovieDetails","trailerSize","useParams","movie","setMovie","credits","runtime","otherData","setOtherData","getMovieDetails","genres","forEach","cast","vote_average","videos","trailers","filter","frameBorder","backdrop_path","release_date","gutterBottom","join","TvDetails","tv","setTv","createdBy","seasons","getTvDetails","episode_run_time","created_by","number_of_seasons","first_air_date","last_air_date","ScrollToTop","pathname","useLocation","window","scrollTo","themeDark","createMuiTheme","palette","typography","htmlFontSize","responsiveFontSizes","themeLight","Container","themeProvider","ThemeProvider","path","component","App","CssBaseline","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ae99e350.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\nexport const baseUrl = 'https://api.themoviedb.org/3/';\n\nconst apiUrl = `api_key=${API_KEY}`;\n\nexport const caching = async url => {\n  try {\n    const cacheData = await caches.open('netflixCloneCache').then(async cache => {\n      const match = await cache.match(url).then(async response => {\n        if (response) {\n          return response.json().then(res => res);\n        }\n        const result = await axios.get(url).then(data => data);\n        cache.add(url);\n        return result;\n      });\n      return match;\n    });\n    return cacheData;\n  } catch (error) {\n    const result = axios.get(url).then(data => data);\n    return result;\n  }\n};\n\nexport const getTopRatedMovies = async () => {\n  const result = caching(`${baseUrl}movie/top_rated?${apiUrl}&language=en-US`).then(data => data);\n  return result;\n};\n\nexport const getPopularMovies = async () => {\n  const result = caching(`${baseUrl}movie/popular?${apiUrl}&language=en-US`).then(data => data);\n  return result;\n};\n\nexport const getUpcomingMovies = async () => {\n  const result = caching(`${baseUrl}movie/upcoming?${apiUrl}&language=en-US`).then(data => data);\n  return result;\n};\n\nexport const getNowPlayingMovies = async () => {\n  const result = caching(`${baseUrl}movie/now_playing?${apiUrl}&language=en-US`).then(data => data);\n  return result;\n};\n\nexport const getTopRatedTvShows = async () => {\n  const result = caching(`${baseUrl}tv/top_rated?${apiUrl}&language=en-US`).then(data => data);\n  return result;\n};\n\nexport const getPopularTvShows = async () => {\n  const result = caching(`${baseUrl}tv/popular?${apiUrl}&language=en-US`).then(data => data);\n  return result;\n};\n\nexport const getOnTheAirTvShows = async () => {\n  const result = caching(`${baseUrl}tv/on_the_air?${apiUrl}&language=en-US`).then(data => data);\n  return result;\n};\n\nexport const getAiringTodayTvShows = async () => {\n  const result = caching(`${baseUrl}tv/airing_today?${apiUrl}&language=en-US`).then(data => data);\n  return result;\n};\n\nexport const getMovieDetails = async id => {\n  const result = caching(\n    `${baseUrl}movie/${id}?${apiUrl}&append_to_response=videos,recommendations,credits&language=en-US`,\n  ).then(data => data);\n  return result;\n};\n\nexport const getTvDetails = async id => {\n  const result = caching(\n    `${baseUrl}tv/${id}?${apiUrl}&append_to_response=videos,recommendations,credits&language=en-US`,\n  ).then(data => data);\n  return result;\n};\n\nexport const getDiscoverResults = async (type, rating, genre, sortBy, year) => {\n  if (type === 'movie') {\n    const result = caching(\n      `${baseUrl}discover/movie?${apiUrl}&language=en-US&sort_by=${sortBy}&primary_release_year=${year}&vote_average.gte=${rating}&with_genres=${genre}&include_adult=false&include_video=false&page=1`,\n    ).then(data => data);\n    return result;\n  }\n  const result = caching(\n    `${baseUrl}discover/tv?${apiUrl}&language=en-USsort_by=${sortBy}&first_air_date_year=${year}&page=1&vote_average.gte=${rating}&with_genres=${genre}&include_null_first_air_dates=false`,\n  ).then(data => data);\n  return result;\n};\n","import React, { createContext, useState, useEffect } from 'react';\nimport {\n  getTopRatedMovies,\n  getPopularMovies,\n  getNowPlayingMovies,\n  getUpcomingMovies,\n  getOnTheAirTvShows,\n  getTopRatedTvShows,\n  getPopularTvShows,\n  getAiringTodayTvShows,\n} from '../api/TmdbAPI';\n\nexport const MoviesContext = createContext();\n\nconst MoviesContextProvider = ({ children }) => {\n  const [movies, setmovies] = useState([]);\n  const [tvShows, settvShows] = useState([]);\n\n  useEffect(() => {\n    getTopRatedMovies().then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      setmovies(prevState => ({\n        ...prevState,\n        topRated: data.results,\n      }));\n    });\n\n    getPopularMovies().then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      setmovies(prevState => ({\n        ...prevState,\n        popular: data.results,\n      }));\n    });\n\n    getUpcomingMovies().then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      setmovies(prevState => ({\n        ...prevState,\n        upcoming: data.results,\n      }));\n    });\n\n    getNowPlayingMovies().then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      setmovies(prevState => ({\n        ...prevState,\n        nowPlaying: data.results,\n      }));\n    });\n\n    getTopRatedTvShows().then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      settvShows(prevState => ({\n        ...prevState,\n        topRated: data.results,\n      }));\n    });\n\n    getPopularTvShows().then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      settvShows(prevState => ({\n        ...prevState,\n        popular: data.results,\n      }));\n    });\n\n    getOnTheAirTvShows().then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      settvShows(prevState => ({\n        ...prevState,\n        onTheAir: data.results,\n      }));\n    });\n\n    getAiringTodayTvShows().then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      settvShows(prevState => ({\n        ...prevState,\n        airingToday: data.results,\n      }));\n    });\n  }, []);\n\n  return <MoviesContext.Provider value={{ movies, tvShows }}>{children}</MoviesContext.Provider>;\n};\n\nexport default MoviesContextProvider;\n","import React, { createContext, useState } from 'react';\n\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = ({ children }) => {\n  const [theme, setTheme] = useState({\n    isLight: false,\n    dark: { background: '#161616', text: '#ccc', secondary: '#fff', card: '#4c4c4c' },\n    light: { background: '#eee', text: '#3c3c3c', secondary: '#000', card: '#9c9c9c' },\n  });\n  const handleChange = () => {\n    setTheme(prevState => ({\n      ...prevState,\n      isLight: !prevState.isLight,\n    }));\n  };\n  return (\n    <ThemeContext.Provider value={{ ...theme, handleChange }}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import React, { useState, useContext } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  FormControlLabel,\n  Switch,\n  useMediaQuery,\n  IconButton,\n  MenuItem,\n  Menu,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link, NavLink } from 'react-router-dom';\nimport logo from '../NetflixLogo.svg';\nimport { ThemeContext } from './ThemeContext';\n\nconst useStyles = makeStyles({\n  appBar: {\n    backgroundColor: theme => `${theme.background}`,\n  },\n  nav: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: '5rem',\n    width: '180rem',\n    padding: '0 2rem',\n    listStyle: 'none',\n    '@media (max-width:720px)': {\n      padding: '0 0.5rem',\n    },\n  },\n  linkStyle: {\n    color: theme => `${theme.text}`,\n    textDecoration: 'none',\n    margin: '0 2rem',\n    '&:hover': {\n      color: theme => `${theme.secondary}`,\n    },\n    '&.active': {\n      color: theme => `${theme.secondary}`,\n    },\n  },\n  img: {\n    width: '10rem',\n    margin: '0.6rem 2rem 0 0',\n  },\n  label: {\n    color: theme => `${theme.secondary}`,\n  },\n  menuItem: {\n    textDecoration: 'none',\n    color: theme => `${theme.secondary}`,\n  },\n});\n\nconst NavBar = () => {\n  const { isLight, dark, light, handleChange } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n  const mobile = useMediaQuery('(max-width:720px)');\n  const display = mobile ? 'none' : 'block';\n  const menu = mobile ? 'block' : 'none';\n  const logoMargin = mobile ? 'auto' : '0';\n  const classes = useStyles(theme);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar>\n          <ul className={classes.nav}>\n            <Link to=\"/NetflixClone/\" style={{ marginRight: logoMargin }}>\n              <li>\n                <img src={logo} alt=\"Netflix logo\" className={classes.img} />\n              </li>\n            </Link>\n            <NavLink style={{ display }} exact className={classes.linkStyle} to=\"/NetflixClone/\">\n              <li>\n                <Typography variant=\"h6\">Home</Typography>\n              </li>\n            </NavLink>\n            <NavLink style={{ display }} className={classes.linkStyle} to=\"/NetflixClone/movies\">\n              <li>\n                <Typography variant=\"h6\">Movies</Typography>\n              </li>\n            </NavLink>\n            <NavLink style={{ display }} className={classes.linkStyle} to=\"/NetflixClone/tv\">\n              <li>\n                <Typography variant=\"h6\">TV Shows</Typography>\n              </li>\n            </NavLink>\n            <NavLink\n              className={classes.linkStyle}\n              to=\"/NetflixClone/discover\"\n              style={{ marginRight: 'auto', display }}\n            >\n              <li>\n                <Typography variant=\"h6\">Discover</Typography>\n              </li>\n            </NavLink>\n            <FormControlLabel\n              control={<Switch checked={!isLight} onChange={handleChange} />}\n              label=\"DarkMode\"\n              classes={{\n                label: classes.label,\n              }}\n            />\n            <IconButton style={{ display: menu }} onClick={handleClick}>\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <Link to=\"/NetflixClone/\" className={classes.menuItem}>\n                <MenuItem onClick={handleClose}>Home</MenuItem>\n              </Link>\n              <Link to=\"/NetflixClone/movies\" className={classes.menuItem}>\n                <MenuItem onClick={handleClose}>Movies</MenuItem>\n              </Link>\n              <Link to=\"/NetflixClone/tv\" className={classes.menuItem}>\n                <MenuItem onClick={handleClose}>TV Shows</MenuItem>\n              </Link>\n              <Link to=\"/NetflixClone/discover\" className={classes.menuItem}>\n                <MenuItem onClick={handleClose}>Discover</MenuItem>\n              </Link>\n            </Menu>\n          </ul>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, useMediaQuery } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { ThemeContext } from './ThemeContext';\n\nconst useStyles = makeStyles({\n  container: {\n    paddingTop: '4rem',\n    paddingLeft: '4rem',\n    color: theme => `${theme.text}`,\n    '@media (max-width:720px)': {\n      paddingLeft: '2rem',\n      paddingTop: '1rem',\n    },\n  },\n  root: {\n    height: '58rem',\n    display: 'flex',\n    alignItems: 'center',\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    listStyle: 'none',\n    padding: '0',\n    margin: '0',\n    transition: 'all 0.5s',\n    '@media (hover:hover)': {\n      '&:hover li': {\n        opacity: '0.5',\n        transform: 'translateX(-2rem)',\n      },\n    },\n  },\n  list: {\n    margin: '0 5px',\n    transition: 'all 0.5s',\n    '@media (hover:hover)': {\n      '&&:hover': {\n        opacity: '1',\n        transform: 'scale(1.1) translateX(0)',\n      },\n\n      '&&:hover ~ *': {\n        transform: 'translateX(2rem)',\n      },\n    },\n  },\n  poster: {\n    borderRadius: '2rem',\n  },\n});\n\nconst ItemGrid = ({ items, type, name }) => {\n  const { isLight, dark, light } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n  const classes = useStyles(theme);\n  const title = type === 'movie' ? 'title' : 'name';\n  const mobile = useMediaQuery('(max-width:720px)');\n  const posterSize = mobile ? '185' : '342';\n  const posterRadius = mobile ? '1rem' : '2rem';\n  const rootSize = mobile ? '32rem' : '58rem';\n\n  return (\n    <div className={classes.container}>\n      <Typography variant=\"h4\">{name}</Typography>\n      <ul style={{ height: rootSize }} className={classes.root}>\n        {items.map(item => (\n          <li key={item.id} className={classes.list}>\n            <Link to={`/NetflixClone/${type}/${item.id}`} key={item.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w${posterSize}${item.poster_path}`}\n                alt={item[title]}\n                style={{ borderRadius: posterRadius }}\n                className={classes.poster}\n              />\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ItemGrid;\n","import React, { useContext } from 'react';\nimport { Typography } from '@material-ui/core';\nimport ItemGrid from './ItemGrid';\nimport { MoviesContext } from './MoviesContext';\n\nconst Home = () => {\n  const { movies, tvShows } = useContext(MoviesContext);\n  return (\n    <div>\n      {movies.topRated &&\n      movies.popular &&\n      movies.nowPlaying &&\n      movies.upcoming &&\n      tvShows.topRated &&\n      tvShows.popular &&\n      tvShows.onTheAir &&\n      tvShows.airingToday ? (\n        <>\n          <ItemGrid items={movies.topRated} type=\"movies\" name=\"Top Rated Movies\" />\n          <ItemGrid items={tvShows.topRated} type=\"tv\" name=\"Top Rated TV Shows\" />\n          <ItemGrid items={movies.nowPlaying} type=\"movies\" name=\"Now Playing Movies\" />\n          <ItemGrid items={tvShows.onTheAir} type=\"tv\" name=\"On The Air TV Shows\" />\n          <ItemGrid items={movies.popular} type=\"movies\" name=\"Popular Movies\" />\n          <ItemGrid items={tvShows.popular} type=\"tv\" name=\"Popular TV Shows\" />\n          <ItemGrid items={movies.upcoming} type=\"movies\" name=\"Upcoming Movies\" />\n          <ItemGrid items={tvShows.airingToday} type=\"tv\" name=\"Airing Today TV Shows\" />\n        </>\n      ) : (\n        <Typography variant=\"h3\" color=\"secondary\" align=\"center\">\n          Loading\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport { Typography } from '@material-ui/core';\nimport ItemGrid from './ItemGrid';\nimport { MoviesContext } from './MoviesContext';\n\nconst Movies = () => {\n  const { movies } = useContext(MoviesContext);\n\n  return (\n    <div>\n      {movies.topRated && movies.popular && movies.nowPlaying && movies.upcoming ? (\n        <>\n          <ItemGrid items={movies.topRated} type=\"movies\" name=\"Top Rated\" />\n          <ItemGrid items={movies.nowPlaying} type=\"movies\" name=\"Now Playing\" />\n          <ItemGrid items={movies.popular} type=\"movies\" name=\"Popular\" />\n          <ItemGrid items={movies.upcoming} type=\"movies\" name=\"Upcoming\" />\n        </>\n      ) : (\n        <Typography variant=\"h3\" color=\"secondary\" align=\"center\">\n          Loading\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import React, { useContext } from 'react';\nimport { Typography } from '@material-ui/core';\nimport ItemGrid from './ItemGrid';\nimport { MoviesContext } from './MoviesContext';\n\nconst Tv = () => {\n  const { tvShows } = useContext(MoviesContext);\n\n  return (\n    <div>\n      {tvShows.topRated && tvShows.popular && tvShows.onTheAir && tvShows.airingToday ? (\n        <>\n          <ItemGrid items={tvShows.topRated} type=\"tv\" name=\"Top Rated\" />\n          <ItemGrid items={tvShows.onTheAir} type=\"tv\" name=\"On The Air\" />\n          <ItemGrid items={tvShows.popular} type=\"tv\" name=\"Popular\" />\n          <ItemGrid items={tvShows.airingToday} type=\"tv\" name=\"Airing Today\" />\n        </>\n      ) : (\n        <Typography variant=\"h3\" color=\"secondary\" align=\"center\">\n          Loading\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default Tv;\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, useMediaQuery } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { ThemeContext } from './ThemeContext';\n\nconst useStyles = makeStyles({\n  conatiner: {\n    display: 'flex',\n    flexDirection: 'column',\n    listStyle: 'none',\n    paddingLeft: '0rem',\n  },\n  item: {\n    display: 'flex',\n    padding: '2rem 1rem',\n    maxWidth: '80rem',\n    color: theme => `${theme.secondary}`,\n    textDecoration: 'none',\n    '&:hover': {\n      backgroundColor: theme => `${theme.card}`,\n    },\n  },\n  poster: {\n    marginRight: '1.5rem',\n    borderRadius: '1rem',\n  },\n  result: {\n    marginTop: '2rem',\n  },\n  overview: {\n    maxWidth: '50rem',\n    '@media (max-width:720px) and (min-width:500px)': {\n      maxWidth: '35rem',\n    },\n    '@media (max-width:500px) and (min-width:360px)': {\n      maxWidth: '25rem',\n    },\n    '@media (max-width:360px)': {\n      maxWidth: '20rem',\n    },\n  },\n});\n\nconst DiscoverResults = ({ results, type }) => {\n  const { isLight, dark, light } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n  const classes = useStyles(theme);\n  const title = type === 'movie' ? 'title' : 'name';\n  const link = type === 'movie' ? 'movies' : 'tv';\n  const mobile = useMediaQuery('(max-width:720px)');\n  const posterSize = mobile ? '92' : '154';\n\n  return (\n    <>\n      <Typography variant=\"h4\" className={classes.result}>\n        Results\n      </Typography>\n      <ul className={classes.conatiner}>\n        {results.map(result => (\n          <li key={result.id}>\n            <Link\n              to={`/NetflixClone/${link}/${result.id}`}\n              key={result.id}\n              className={classes.item}\n            >\n              <img\n                src={`https://image.tmdb.org/t/p/w${posterSize}${result.poster_path}`}\n                alt={result[title]}\n                className={classes.poster}\n              />\n              <Typography className={classes.overview} variant=\"h6\">\n                {result.overview.length > 200\n                  ? `${result.overview.slice(0, 200)}...`\n                  : result.overview}\n              </Typography>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default DiscoverResults;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Paper,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Input,\n  useMediaQuery,\n} from '@material-ui/core';\nimport { getDiscoverResults } from '../api/TmdbAPI';\nimport DiscoverResults from './DiscoverResults';\nimport { ThemeContext } from './ThemeContext';\n\nconst useStyles = makeStyles({\n  paper: {\n    margin: '0 auto',\n    maxWidth: '128rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: theme => `${theme.background}`,\n    boxShadow: 'none',\n  },\n  formContainer: {\n    margin: '2rem 0',\n    display: 'flex',\n    justifyContent: 'space-between',\n    '@media (max-width:500px)': {\n      maxWidth: '35rem',\n      flexWrap: 'wrap',\n    },\n  },\n  form: {\n    margin: '0 2rem',\n    minWidth: '12rem',\n    '@media (max-width:720px)': {\n      minWidth: '0',\n      margin: '0 1rem',\n    },\n  },\n  title: {\n    margin: '2rem 0',\n  },\n});\n\nconst itemHeight = 48;\nconst paddingTop = 8;\nconst menuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: itemHeight * 4.5 + paddingTop,\n      width: 250,\n    },\n  },\n};\n\nconst Discover = () => {\n  const { isLight, dark, light } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n  const classes = useStyles(theme);\n\n  const mobile = useMediaQuery('(max-width:500px)');\n  const style = mobile ? { margin: '1rem auto' } : {};\n\n  const [filters, setFilters] = useState({\n    type: 'movie',\n    year: '2019',\n    genre: '16',\n    sortBy: 'popularity.desc',\n    rating: '6',\n  });\n  const [results, setResults] = useState([]);\n\n  const handleClick = (event, name) => {\n    setFilters(prevState => ({\n      ...prevState,\n      [name]: event.target.value,\n    }));\n  };\n\n  useEffect(() => {\n    getDiscoverResults(\n      filters.type,\n      filters.rating,\n      filters.genre,\n      filters.sortBy,\n      filters.year,\n    ).then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      setResults(data.results);\n    });\n  }, [filters]);\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h2\" className={classes.title}>\n        Discover\n      </Typography>\n      <div className={classes.formContainer}>\n        <FormControl className={classes.form}>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={filters.type}\n            onClick={event => {\n              handleClick(event, 'type');\n            }}\n            MenuProps={menuProps}\n          >\n            <MenuItem value=\"movie\">Movie</MenuItem>\n            <MenuItem value=\"tv\">Tv</MenuItem>\n          </Select>\n        </FormControl>\n\n        <FormControl className={classes.form}>\n          <InputLabel>Year</InputLabel>\n          <Select\n            value={filters.year}\n            onClick={event => {\n              handleClick(event, 'year');\n            }}\n            MenuProps={menuProps}\n          >\n            <MenuItem value=\"2019\">2019</MenuItem>\n            <MenuItem value=\"2018\">2018</MenuItem>\n            <MenuItem value=\"2017\">2017</MenuItem>\n            <MenuItem value=\"2016\">2016</MenuItem>\n            <MenuItem value=\"2015\">2015</MenuItem>\n            <MenuItem value=\"2014\">2014</MenuItem>\n            <MenuItem value=\"2013\">2013</MenuItem>\n            <MenuItem value=\"2012\">2012</MenuItem>\n            <MenuItem value=\"2011\">2011</MenuItem>\n            <MenuItem value=\"2010\">2010</MenuItem>\n          </Select>\n        </FormControl>\n\n        <FormControl className={classes.form}>\n          <InputLabel>Rating</InputLabel>\n          <Select\n            value={filters.rating}\n            onClick={event => {\n              handleClick(event, 'rating');\n            }}\n            MenuProps={menuProps}\n          >\n            <MenuItem value=\"9\">&gt; 9</MenuItem>\n            <MenuItem value=\"8\">&gt; 8</MenuItem>\n            <MenuItem value=\"7\">&gt; 7</MenuItem>\n            <MenuItem value=\"6\">&gt; 6</MenuItem>\n            <MenuItem value=\"5\">&gt; 5</MenuItem>\n            <MenuItem value=\"4\">&gt; 4</MenuItem>\n            <MenuItem value=\"3\">&gt; 3</MenuItem>\n            <MenuItem value=\"2\">&gt; 2</MenuItem>\n            <MenuItem value=\"1\">&gt; 1</MenuItem>\n          </Select>\n        </FormControl>\n\n        <FormControl className={classes.form}>\n          <InputLabel>Sort By</InputLabel>\n          <Select\n            value={filters.sortBy}\n            onClick={event => {\n              handleClick(event, 'sortBy');\n            }}\n            MenuProps={menuProps}\n          >\n            <MenuItem value=\"primary_release_date\">Release Date</MenuItem>\n            <MenuItem value=\"vote_average.gte\">Rating</MenuItem>\n            <MenuItem value=\"popularity.desc\">Popularity</MenuItem>\n          </Select>\n        </FormControl>\n\n        <FormControl style={style} className={classes.form}>\n          <InputLabel>Genres</InputLabel>\n          <Select\n            value={filters.genre}\n            onChange={event => {\n              handleClick(event, 'genre');\n            }}\n            input={<Input />}\n            MenuProps={menuProps}\n          >\n            <MenuItem value=\"16\">Animation</MenuItem>\n            <MenuItem value=\"35\">Comedy</MenuItem>\n            <MenuItem value=\"80\">Crime</MenuItem>\n            <MenuItem value=\"14\">Fantasy</MenuItem>\n            <MenuItem value=\"18\">Drama</MenuItem>\n            <MenuItem value=\"9648\">Mystery</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n\n      <DiscoverResults results={results} type={filters.type} />\n    </Paper>\n  );\n};\n\nexport default Discover;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, Paper, useMediaQuery } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ItemGrid from './ItemGrid';\nimport { getMovieDetails } from '../api/TmdbAPI';\nimport { ThemeContext } from './ThemeContext';\n\nconst useStyles = makeStyles({\n  paper: {\n    maxWidth: '128rem',\n    margin: '0 auto',\n    backgroundColor: theme => `${theme.background}`,\n    boxShadow: 'none',\n  },\n  imgContainer: {\n    height: '60rem',\n    position: 'relative',\n    padding: '4rem 6rem',\n    display: 'flex',\n    '&::before': {\n      position: 'absolute',\n      content: \"' '\",\n      top: '0',\n      bottom: '0',\n      right: '0',\n      left: '0',\n      backgroundImage:\n        'linear-gradient(to right, rgba(0,0,0,0.8),  rgba(0,0,0,0.8) 20%,rgba(0,0,0,0))',\n    },\n    '@media (max-width:720px) and (min-width:600px)': {\n      height: '43rem',\n      padding: '4rem 2rem',\n    },\n    '@media (max-width:600px) ': {\n      height: '43rem',\n      padding: '2rem 2rem',\n    },\n  },\n  details: {\n    color: 'white',\n    zIndex: '1',\n    maxWidth: '80rem',\n  },\n  title: {\n    marginBottom: '1.5rem',\n    '@media (max-width:720px) and (min-width: 600px)': {\n      fontSize: '3.5rem',\n    },\n    '@media (max-width:500px)': {\n      fontSize: '3rem',\n      marginBottom: '0.6rem',\n    },\n  },\n  info: {\n    marginBottom: '3rem',\n    color: '#ccc',\n    '@media (max-width:720px) and (min-width: 600px)': {\n      fontSize: '1.8rem',\n    },\n    '@media (max-width:500px)': {\n      marginBottom: '1rem',\n    },\n  },\n  overview: {\n    fontFamily: 'Helvetica,sans-serif',\n    marginBottom: '3rem',\n    '@media (max-width:720px) and (min-width: 600px)': {\n      fontSize: '1.8rem',\n    },\n    '@media (max-width:720px)': {\n      marginBottom: '1rem',\n    },\n    '@media (max-width:400px)': {\n      fontSize: '1.5rem',\n    },\n  },\n  container: {\n    display: 'flex',\n  },\n  subtitle: {\n    color: '#ccc',\n    marginBottom: '0.5rem',\n    '@media (max-width:720px) and (min-width: 600px)': {\n      fontSize: '1.5rem',\n    },\n  },\n  subcontent: {\n    marginLeft: '0.5rem',\n    '@media (max-width:720px) and (min-width: 600px)': {\n      fontSize: '1.5rem',\n    },\n  },\n  trailer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '2rem',\n  },\n  recommendations: {\n    '&& > div': {\n      paddingLeft: '0',\n    },\n  },\n});\n\nconst MovieDetails = () => {\n  const { isLight, dark, light } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n  const classes = useStyles(theme);\n\n  const mobile = useMediaQuery('(max-width:720px)');\n  const smallMobile = useMediaQuery('(max-width:500px)');\n  const posterSize = mobile ? '780' : '1280';\n  let trailerSize;\n  if (smallMobile) {\n    trailerSize = '220px';\n  } else if (mobile) {\n    trailerSize = '380px';\n  } else {\n    trailerSize = '600px';\n  }\n\n  const { id } = useParams();\n\n  const [movie, setMovie] = useState({});\n  const [otherData, setOtherData] = useState({\n    genre: [],\n    credits: [],\n    rating: '',\n    runtime: '',\n    trailer: '',\n  });\n\n  useEffect(() => {\n    setOtherData({\n      genre: [],\n      credits: [],\n      rating: '',\n      runtime: '',\n      trailer: '',\n    });\n    getMovieDetails(id).then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      setMovie(data);\n      data.genres.forEach(item => {\n        setOtherData(prevState => ({\n          ...prevState,\n          genre: [...prevState.genre, `${item.name}`],\n        }));\n      });\n\n      data.credits.cast.slice(0, 3).forEach(item => {\n        setOtherData(prevState => ({\n          ...prevState,\n          credits: [...prevState.credits, `${item.name}`],\n        }));\n      });\n      if (data.vote_average !== 0) {\n        setOtherData(prevState => ({\n          ...prevState,\n          rating: `| ${data.vote_average}`,\n        }));\n      }\n\n      if (data.runtime !== null) {\n        setOtherData(prevState => ({\n          ...prevState,\n          runtime: `| ${data.runtime} mins`,\n        }));\n      }\n\n      if (data.videos.results.length > 0) {\n        setOtherData(prevState => {\n          const trailers = data.videos.results.filter(result => result.type === 'Trailer');\n          const trailer = trailers[0] ? `${trailers[0].key}` : `${data.videos.results[0].key}`;\n          return {\n            ...prevState,\n            trailer,\n          };\n        });\n      }\n    });\n  }, [id]);\n\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.trailer}>\n        <iframe\n          src={`https://www.youtube.com/embed/${otherData.trailer}`}\n          title=\"Trailer\"\n          width=\"1280\"\n          height={trailerSize}\n          frameBorder=\"0\"\n        />\n      </div>\n      <div\n        style={{\n          backgroundImage: `url(https://image.tmdb.org/t/p/w${posterSize}${movie.backdrop_path}`,\n        }}\n        className={classes.imgContainer}\n      >\n        {movie.title ? (\n          <div className={classes.details}>\n            <Typography variant=\"h2\" className={classes.title}>\n              {`${movie.title}`}\n            </Typography>\n            <Typography variant=\"h5\" className={classes.info}>\n              {`${movie.release_date.slice(0, 4)} ${otherData.rating} ${otherData.runtime}`}\n            </Typography>\n            <Typography variant=\"h5\" className={classes.overview}>\n              {`${movie.overview}`}\n            </Typography>\n            <div className={classes.container}>\n              <Typography variant=\"h6\" className={classes.subtitle}>\n                Starring:\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom className={classes.subcontent}>\n                {` ${otherData.credits.join(',')}`}\n              </Typography>\n            </div>\n            <div className={classes.container}>\n              <Typography variant=\"h6\" className={classes.subtitle}>\n                Genres:\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom className={classes.subcontent}>\n                {` ${otherData.genre.join(',')}`}\n              </Typography>\n            </div>\n          </div>\n        ) : null}\n      </div>\n      <div className={classes.recommendations}>\n        {movie.recommendations ? (\n          <ItemGrid items={movie.recommendations.results} type=\"movies\" name=\"Recommendations\" />\n        ) : null}\n      </div>\n    </Paper>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, Paper, useMediaQuery } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ItemGrid from './ItemGrid';\nimport { getTvDetails } from '../api/TmdbAPI';\nimport { ThemeContext } from './ThemeContext';\n\nconst useStyles = makeStyles({\n  paper: {\n    maxWidth: '128rem',\n    margin: '0 auto',\n    backgroundColor: theme => `${theme.background}`,\n    boxShadow: 'none',\n  },\n  imgContainer: {\n    height: '60rem',\n    position: 'relative',\n    padding: '4rem 6rem',\n    display: 'flex',\n    '&::before': {\n      position: 'absolute',\n      content: \"' '\",\n      top: '0',\n      bottom: '0',\n      right: '0',\n      left: '0',\n      backgroundImage:\n        'linear-gradient(to right, rgba(0,0,0,0.8),  rgba(0,0,0,0.8) 20%,rgba(0,0,0,0))',\n    },\n    '@media (max-width:720px) and (min-width:600px)': {\n      height: '43rem',\n      padding: '4rem 2rem',\n    },\n    '@media (max-width:600px) ': {\n      height: '43rem',\n      padding: '2rem 2rem',\n    },\n  },\n  details: {\n    color: 'white',\n    zIndex: '1',\n    maxWidth: '80rem',\n  },\n  title: {\n    marginBottom: '1.5rem',\n    '@media (max-width:720px) and (min-width: 600px)': {\n      fontSize: '3.5rem',\n    },\n    '@media (max-width:500px)': {\n      fontSize: '3rem',\n      marginBottom: '0.6rem',\n    },\n  },\n  info: {\n    marginBottom: '3rem',\n    color: '#ccc',\n    '@media (max-width:720px) and (min-width: 600px)': {\n      fontSize: '1.8rem',\n    },\n    '@media (max-width:500px)': {\n      marginBottom: '1rem',\n    },\n  },\n  overview: {\n    fontFamily: 'Helvetica,sans-serif',\n    marginBottom: '3rem',\n    '@media (max-width:720px) and (min-width: 600px)': {\n      fontSize: '1.8rem',\n    },\n    '@media (max-width:720px)': {\n      marginBottom: '1rem',\n    },\n    '@media (max-width:400px)': {\n      fontSize: '1.5rem',\n    },\n  },\n  container: {\n    display: 'flex',\n  },\n  subtitle: {\n    color: '#ccc',\n    marginBottom: '0.5rem',\n    '@media (max-width:720px) and (min-width: 600px)': {\n      fontSize: '1.5rem',\n    },\n  },\n  subcontent: {\n    marginLeft: '0.5rem',\n    '@media (max-width:720px) and (min-width: 600px)': {\n      fontSize: '1.5rem',\n    },\n  },\n  trailer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '2rem',\n  },\n  recommendations: {\n    '&& > div': {\n      paddingLeft: '0',\n    },\n  },\n});\n\nconst TvDetails = () => {\n  const { isLight, dark, light } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n  const classes = useStyles(theme);\n\n  const mobile = useMediaQuery('(max-width:720px)');\n  const smallMobile = useMediaQuery('(max-width:500px)');\n  const posterSize = mobile ? '780' : '1280';\n  let trailerSize;\n  if (smallMobile) {\n    trailerSize = '220px';\n  } else if (mobile) {\n    trailerSize = '380px';\n  } else {\n    trailerSize = '600px';\n  }\n\n  const { id } = useParams();\n\n  const [tv, setTv] = useState({});\n  const [otherData, setOtherData] = useState({\n    createdBy: [],\n    genre: [],\n    credits: [],\n    rating: '',\n    runtime: '',\n    trailer: '',\n    seasons: '',\n  });\n\n  useEffect(() => {\n    setOtherData({\n      createdBy: [],\n      genre: [],\n      credits: [],\n      rating: '',\n      runtime: '',\n      trailer: '',\n      seasons: '',\n    });\n    getTvDetails(id).then(response => {\n      let data;\n      if (response.data) {\n        data = response.data;\n      } else {\n        data = response;\n      }\n      setTv(data);\n      data.genres.forEach(item => {\n        setOtherData(prevState => ({\n          ...prevState,\n          genre: [...prevState.genre, `${item.name}`],\n        }));\n      });\n\n      data.credits.cast.slice(0, 3).forEach(item => {\n        setOtherData(prevState => ({\n          ...prevState,\n          credits: [...prevState.credits, `${item.name}`],\n        }));\n      });\n      if (data.vote_average !== 0) {\n        setOtherData(prevState => ({\n          ...prevState,\n          rating: `| ${data.vote_average}`,\n        }));\n      }\n\n      if (data.episode_run_time.length > 0) {\n        setOtherData(prevState => ({\n          ...prevState,\n          runtime: `| ${data.episode_run_time[0]} mins`,\n        }));\n      }\n\n      if (data.videos.results.length > 0) {\n        setOtherData(prevState => {\n          const trailers = data.videos.results.filter(result => result.type === 'Trailer');\n          const trailer = trailers[0] ? `${trailers[0].key}` : `${data.videos.results[0].key}`;\n          return {\n            ...prevState,\n            trailer,\n          };\n        });\n      }\n\n      data.created_by.forEach(item => {\n        setOtherData(prevState => ({\n          ...prevState,\n          createdBy: [...prevState.createdBy, `${item.name}`],\n        }));\n      });\n\n      setOtherData(prevState => ({\n        ...prevState,\n        seasons:\n          data.number_of_seasons > 1\n            ? `| ${data.number_of_seasons} Seasons`\n            : `| ${data.number_of_seasons} Season`,\n      }));\n    });\n  }, [id]);\n\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.trailer}>\n        <iframe\n          src={`https://www.youtube.com/embed/${otherData.trailer}`}\n          title=\"Trailer\"\n          width=\"1280\"\n          height={trailerSize}\n          frameBorder=\"0\"\n        />\n      </div>\n      <div\n        style={{\n          backgroundImage: `url(https://image.tmdb.org/t/p/w${posterSize}${tv.backdrop_path}`,\n        }}\n        className={classes.imgContainer}\n      >\n        {tv.name ? (\n          <div className={classes.details}>\n            <Typography variant=\"h2\" className={classes.title}>\n              {`${tv.name}`}\n            </Typography>\n            <Typography variant=\"h5\" className={classes.info}>\n              {`${tv.first_air_date.slice(0, 4)} - ${tv.last_air_date.slice(0, 4)} ${\n                otherData.rating\n              } ${otherData.runtime} ${otherData.seasons}`}\n            </Typography>\n            <Typography variant=\"h5\" className={classes.overview}>\n              {`${tv.overview}`}\n            </Typography>\n            <div className={classes.container}>\n              <Typography variant=\"h6\" className={classes.subtitle}>\n                Created By:\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom className={classes.subcontent}>\n                {` ${otherData.createdBy.join(',')}`}\n              </Typography>\n            </div>\n            <div className={classes.container}>\n              <Typography variant=\"h6\" className={classes.subtitle}>\n                Starring:\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom className={classes.subcontent}>\n                {` ${otherData.credits.join(',')}`}\n              </Typography>\n            </div>\n            <div className={classes.container}>\n              <Typography variant=\"h6\" className={classes.subtitle}>\n                Genres:\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom className={classes.subcontent}>\n                {` ${otherData.genre.join(',')}`}\n              </Typography>\n            </div>\n          </div>\n        ) : null}\n      </div>\n      <div className={classes.recommendations}>\n        {tv.recommendations ? (\n          <ItemGrid items={tv.recommendations.results} type=\"tv\" name=\"Recommendations\" />\n        ) : null}\n      </div>\n    </Paper>\n  );\n};\n\nexport default TvDetails;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React, { useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport {\n  makeStyles,\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport NavBar from './NavBar';\nimport Home from './Home';\nimport Movies from './Movies';\nimport Tv from './Tv';\nimport Discover from './Discover';\nimport MovieDetails from './MovieDetails';\nimport TvDetails from './TvDetails';\nimport ScrollToTop from './ScrollToTop';\nimport { ThemeContext } from './ThemeContext';\n\nlet themeDark = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n  typography: {\n    fontFamily: '\"Oswald\",\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    htmlFontSize: 10,\n  },\n});\nthemeDark = responsiveFontSizes(themeDark);\n\nlet themeLight = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n  typography: {\n    fontFamily: '\"Oswald\",\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    htmlFontSize: 10,\n  },\n});\nthemeLight = responsiveFontSizes(themeLight);\n\nconst useStyles = makeStyles({\n  container: {\n    backgroundColor: theme => `${theme.background}`,\n  },\n});\n\nconst Container = () => {\n  const { isLight, dark, light } = useContext(ThemeContext);\n  const theme = isLight ? light : dark;\n  const themeProvider = isLight ? themeLight : themeDark;\n  const classes = useStyles(theme);\n  return (\n    <ThemeProvider theme={themeProvider}>\n      <div className={classes.container}>\n        <Router>\n          <ScrollToTop />\n          <NavBar />\n          <Switch>\n            <Route path=\"/NetflixClone/\" exact component={Home} />\n            <Route path=\"/NetflixClone/movies\" exact component={Movies} />\n            <Route path=\"/NetflixClone/tv\" exact component={Tv} />\n            <Route path=\"/NetflixClone/discover\" component={Discover} />\n            <Route path=\"/NetflixClone/movies/:id\" component={MovieDetails} />\n            <Route path=\"/NetflixClone/tv/:id\" component={TvDetails} />\n          </Switch>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default Container;\n","import React from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport MoviesContextProvider from './components/MoviesContext';\nimport Container from './components/Container';\nimport ThemeContextProvider from './components/ThemeContext';\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <MoviesContextProvider>\n        <ThemeContextProvider>\n          <Container />\n        </ThemeContextProvider>\n      </MoviesContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/NetflixLogo.ab665ffa.svg\";"],"sourceRoot":""}